/**
 * Decentralized FDA API
 * A platform for quantifying the effects of every drug, supplement, food, and other factor on your health.
 *
 * OpenAPI spec version: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Card } from "../models/Card"
import { TrackingReminderNotificationAction } from "../models/TrackingReminderNotificationAction"
import { Unit } from "../models/Unit"

export class TrackingReminder {
  "actionArray"?: Array<TrackingReminderNotificationAction>
  "availableUnits"?: Array<Unit>
  /**
   * Link to study comparing variable with strongest relationship for user or population
   */
  "bestStudyLink"?: string
  "bestStudyCard"?: Card
  /**
   * Link to study comparing variable with strongest relationship for user
   */
  "bestUserStudyLink"?: string
  "bestUserStudyCard"?: Card
  /**
   * Link to study comparing variable with strongest relationship for population
   */
  "bestPopulationStudyLink"?: string
  "bestPopulationStudyCard"?: Card
  /**
   * Description of relationship with variable with strongest relationship for user or population
   */
  "optimalValueMessage"?: string
  /**
   * Description of relationship with variable with strongest relationship for population
   */
  "commonOptimalValueMessage"?: string
  /**
   * Description of relationship with variable with strongest relationship for user
   */
  "userOptimalValueMessage"?: string
  "card"?: Card
  /**
   * Your client id can be obtained by creating an app at https://builder.quantimo.do
   */
  "clientId"?: string
  /**
   * The way multiple measurements are aggregated over time
   */
  "combinationOperation"?: TrackingReminderCombinationOperationEnum
  /**
   * Ex: 2016-05-18 02:24:08 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
   */
  "createdAt"?: string
  /**
   * Ex: Trader Joe's Bedtime Tea
   */
  "displayName"?: string
  /**
   * Ex: /5
   */
  "unitAbbreviatedName": string
  /**
   * Ex: 5
   */
  "unitCategoryId"?: number
  /**
   * Ex: Rating
   */
  "unitCategoryName"?: string
  /**
   * Ex: 10
   */
  "unitId"?: number
  /**
   * Ex: 1 to 5 Rating
   */
  "unitName"?: string
  /**
   * Default value to use for the measurement when tracking. Unit: User-specified or common.
   */
  "defaultValue"?: number
  /**
   * If a tracking reminder is enabled, tracking reminder notifications will be generated for this variable.
   */
  "enabled"?: boolean
  /**
   * True if the reminders should be delivered via email
   */
  "email"?: boolean
  /**
   * Ex: reminderStartTimeLocal is less than $user->earliestReminderTime or greater than  $user->latestReminderTime
   */
  "errorMessage"?: string
  /**
   * Ex: 0. Unit: User-specified or common.
   */
  "fillingValue"?: number
  /**
   * Ex: 02:45:20 in UTC timezone
   */
  "firstDailyReminderTime"?: string
  /**
   * Ex: Daily
   */
  "frequencyTextDescription"?: string
  /**
   * Ex: Daily at 09:45 PM
   */
  "frequencyTextDescriptionWithTime"?: string
  /**
   * id
   */
  "id"?: number
  /**
   * Ex: saddestFaceIsFive
   */
  "inputType"?: string
  /**
   * Ex: I am an instruction!
   */
  "instructions"?: string
  /**
   * Ex: ion-sad-outline
   */
  "ionIcon"?: string
  /**
   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the last time a measurement was received for this user and variable
   */
  "lastTracked"?: string
  /**
   * Ex: 2
   */
  "lastValue"?: number
  /**
   * UTC ISO 8601 YYYY-MM-DDThh:mm:ss  timestamp for the reminder time of the latest tracking reminder notification that has been pre-emptively generated in the database
   */
  "latestTrackingReminderNotificationReminderTime"?: string
  "localDailyReminderNotificationTimes"?: Array<string>
  "localDailyReminderNotificationTimesForAllReminders"?: Array<string>
  /**
   * Ex: 1
   */
  "manualTracking"?: boolean
  /**
   * Ex: 5. Unit: User-specified or common.
   */
  "maximumAllowedValue"?: number
  /**
   * Ex: 1. Unit: User-specified or common.
   */
  "minimumAllowedValue"?: number
  /**
   * Ex: 1501555520
   */
  "nextReminderTimeEpochSeconds"?: number
  /**
   * True if the reminders should appear in the notification bar
   */
  "notificationBar"?: boolean
  /**
   * Ex: 445
   */
  "numberOfRawMeasurements"?: number
  /**
   * Ex: 1
   */
  "numberOfUniqueValues"?: number
  /**
   * Indicates whether the variable is usually an outcome of interest such as a symptom or emotion
   */
  "outcome"?: boolean
  /**
   * Ex: img/variable_categories/symptoms.png
   */
  "pngPath"?: string
  /**
   * Ex: https://safe.dfda.earth/img/variable_categories/symptoms.png
   */
  "pngUrl"?: string
  /**
   * Link to associated product for purchase
   */
  "productUrl"?: string
  /**
   * True if the reminders should appear as a popup notification
   */
  "popUp"?: boolean
  /**
   * Ex: How is your overall mood?
   */
  "question"?: string
  /**
   * Ex: How is your overall mood on a scale of 1 to 5??
   */
  "longQuestion"?: string
  /**
   * Latest time of day at which reminders should appear in UTC HH:MM:SS format
   */
  "reminderEndTime"?: string
  /**
   * Number of seconds between one reminder and the next
   */
  "reminderFrequency": number
  /**
   * String identifier for the sound to accompany the reminder
   */
  "reminderSound"?: string
  /**
   * Ex: 1469760320
   */
  "reminderStartEpochSeconds"?: number
  /**
   * Earliest time of day at which reminders should appear in UTC HH:MM:SS format
   */
  "reminderStartTime"?: string
  /**
   * Ex: 21:45:20
   */
  "reminderStartTimeLocal"?: string
  /**
   * Ex: 09:45 PM
   */
  "reminderStartTimeLocalHumanFormatted"?: string
  /**
   * Ex: true
   */
  "repeating"?: boolean
  /**
   * Ex: 01:00:00
   */
  "secondDailyReminderTime"?: string
  /**
   * Ex: 1. Unit: User-specified or common.
   */
  "secondToLastValue"?: number
  /**
   * True if the reminders should be delivered via SMS
   */
  "sms"?: boolean
  /**
   * Earliest date on which the user should be reminded to track in YYYY-MM-DD format
   */
  "startTrackingDate"?: string
  /**
   * Latest date on which the user should be reminded to track in YYYY-MM-DD format
   */
  "stopTrackingDate"?: string
  /**
   * Ex: https://safe.dfda.earth/img/variable_categories/symptoms.svg
   */
  "svgUrl"?: string
  /**
   * Ex: 20:00:00
   */
  "thirdDailyReminderTime"?: string
  /**
   * Ex: 3
   */
  "thirdToLastValue"?: number
  /**
   * Ex: 11841
   */
  "trackingReminderId"?: number
  /**
   * Ex: Not Found
   */
  "trackingReminderImageUrl"?: string
  /**
   * UPC or other barcode scan result
   */
  "upc"?: string
  /**
   * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.
   */
  "updatedAt"?: string
  /**
   * ID of User
   */
  "userId"?: number
  /**
   * Ex: /5
   */
  "userVariableUnitAbbreviatedName"?: string
  /**
   * Ex: 5
   */
  "userVariableUnitCategoryId"?: number
  /**
   * Ex: Rating
   */
  "userVariableUnitCategoryName"?: string
  /**
   * Ex: 10
   */
  "userVariableUnitId"?: number
  /**
   * Ex: 1 to 5 Rating
   */
  "userVariableUnitName"?: string
  /**
   * Ex: 10
   */
  "userVariableVariableCategoryId"?: number
  /**
   * Ex: Symptoms
   */
  "userVariableVariableCategoryName"?: string
  /**
   * Valence indicates what type of buttons should be used when recording measurements for this variable. positive - Face buttons with the happiest face equating to a 5/5 rating where higher is better like Overall Mood. negative - Face buttons with the happiest face equating to a 1/5 rating where lower is better like Headache Severity. numeric - Just 1 to 5 numeric buttons for neutral variables.
   */
  "valence"?: string
  /**
   * Ex: Rate daily
   */
  "valueAndFrequencyTextDescription"?: string
  /**
   * Ex: Rate daily at 09:45 PM
   */
  "valueAndFrequencyTextDescriptionWithTime"?: string
  /**
   * Ex: 10
   */
  "variableCategoryId"?: number
  /**
   * Ex: https://static.quantimo.do/img/variable_categories/sad-96.png
   */
  "variableCategoryImageUrl"?: string
  /**
   * Ex: Emotions, Treatments, Symptoms...
   */
  "variableCategoryName": TrackingReminderVariableCategoryNameEnum
  /**
   * Valence indicates what type of buttons should be used when recording measurements for this variable. positive - Face buttons with the happiest face equating to a 5/5 rating where higher is better like Overall Mood. negative - Face buttons with the happiest face equating to a 1/5 rating where lower is better like Headache Severity. numeric - Just 1 to 5 numeric buttons for neutral variables.
   */
  "variableDescription"?: string
  /**
   * Id for the variable to be tracked
   */
  "variableId"?: number
  /**
   * Name of the variable to be used when sending measurements
   */
  "variableName": string

  static readonly discriminator: string | undefined = undefined

  static readonly attributeTypeMap: Array<{
    name: string
    baseName: string
    type: string
    format: string
  }> = [
    {
      name: "actionArray",
      baseName: "actionArray",
      type: "Array<TrackingReminderNotificationAction>",
      format: "",
    },
    {
      name: "availableUnits",
      baseName: "availableUnits",
      type: "Array<Unit>",
      format: "",
    },
    {
      name: "bestStudyLink",
      baseName: "bestStudyLink",
      type: "string",
      format: "",
    },
    {
      name: "bestStudyCard",
      baseName: "bestStudyCard",
      type: "Card",
      format: "",
    },
    {
      name: "bestUserStudyLink",
      baseName: "bestUserStudyLink",
      type: "string",
      format: "",
    },
    {
      name: "bestUserStudyCard",
      baseName: "bestUserStudyCard",
      type: "Card",
      format: "",
    },
    {
      name: "bestPopulationStudyLink",
      baseName: "bestPopulationStudyLink",
      type: "string",
      format: "",
    },
    {
      name: "bestPopulationStudyCard",
      baseName: "bestPopulationStudyCard",
      type: "Card",
      format: "",
    },
    {
      name: "optimalValueMessage",
      baseName: "optimalValueMessage",
      type: "string",
      format: "",
    },
    {
      name: "commonOptimalValueMessage",
      baseName: "commonOptimalValueMessage",
      type: "string",
      format: "",
    },
    {
      name: "userOptimalValueMessage",
      baseName: "userOptimalValueMessage",
      type: "string",
      format: "",
    },
    {
      name: "card",
      baseName: "card",
      type: "Card",
      format: "",
    },
    {
      name: "clientId",
      baseName: "clientId",
      type: "string",
      format: "",
    },
    {
      name: "combinationOperation",
      baseName: "combinationOperation",
      type: "TrackingReminderCombinationOperationEnum",
      format: "",
    },
    {
      name: "createdAt",
      baseName: "createdAt",
      type: "string",
      format: "",
    },
    {
      name: "displayName",
      baseName: "displayName",
      type: "string",
      format: "",
    },
    {
      name: "unitAbbreviatedName",
      baseName: "unitAbbreviatedName",
      type: "string",
      format: "",
    },
    {
      name: "unitCategoryId",
      baseName: "unitCategoryId",
      type: "number",
      format: "",
    },
    {
      name: "unitCategoryName",
      baseName: "unitCategoryName",
      type: "string",
      format: "",
    },
    {
      name: "unitId",
      baseName: "unitId",
      type: "number",
      format: "",
    },
    {
      name: "unitName",
      baseName: "unitName",
      type: "string",
      format: "",
    },
    {
      name: "defaultValue",
      baseName: "defaultValue",
      type: "number",
      format: "float",
    },
    {
      name: "enabled",
      baseName: "enabled",
      type: "boolean",
      format: "",
    },
    {
      name: "email",
      baseName: "email",
      type: "boolean",
      format: "",
    },
    {
      name: "errorMessage",
      baseName: "errorMessage",
      type: "string",
      format: "",
    },
    {
      name: "fillingValue",
      baseName: "fillingValue",
      type: "number",
      format: "",
    },
    {
      name: "firstDailyReminderTime",
      baseName: "firstDailyReminderTime",
      type: "string",
      format: "",
    },
    {
      name: "frequencyTextDescription",
      baseName: "frequencyTextDescription",
      type: "string",
      format: "",
    },
    {
      name: "frequencyTextDescriptionWithTime",
      baseName: "frequencyTextDescriptionWithTime",
      type: "string",
      format: "",
    },
    {
      name: "id",
      baseName: "id",
      type: "number",
      format: "int32",
    },
    {
      name: "inputType",
      baseName: "inputType",
      type: "string",
      format: "",
    },
    {
      name: "instructions",
      baseName: "instructions",
      type: "string",
      format: "",
    },
    {
      name: "ionIcon",
      baseName: "ionIcon",
      type: "string",
      format: "",
    },
    {
      name: "lastTracked",
      baseName: "lastTracked",
      type: "string",
      format: "",
    },
    {
      name: "lastValue",
      baseName: "lastValue",
      type: "number",
      format: "double",
    },
    {
      name: "latestTrackingReminderNotificationReminderTime",
      baseName: "latestTrackingReminderNotificationReminderTime",
      type: "string",
      format: "",
    },
    {
      name: "localDailyReminderNotificationTimes",
      baseName: "localDailyReminderNotificationTimes",
      type: "Array<string>",
      format: "",
    },
    {
      name: "localDailyReminderNotificationTimesForAllReminders",
      baseName: "localDailyReminderNotificationTimesForAllReminders",
      type: "Array<string>",
      format: "",
    },
    {
      name: "manualTracking",
      baseName: "manualTracking",
      type: "boolean",
      format: "",
    },
    {
      name: "maximumAllowedValue",
      baseName: "maximumAllowedValue",
      type: "number",
      format: "double",
    },
    {
      name: "minimumAllowedValue",
      baseName: "minimumAllowedValue",
      type: "number",
      format: "double",
    },
    {
      name: "nextReminderTimeEpochSeconds",
      baseName: "nextReminderTimeEpochSeconds",
      type: "number",
      format: "",
    },
    {
      name: "notificationBar",
      baseName: "notificationBar",
      type: "boolean",
      format: "",
    },
    {
      name: "numberOfRawMeasurements",
      baseName: "numberOfRawMeasurements",
      type: "number",
      format: "",
    },
    {
      name: "numberOfUniqueValues",
      baseName: "numberOfUniqueValues",
      type: "number",
      format: "",
    },
    {
      name: "outcome",
      baseName: "outcome",
      type: "boolean",
      format: "",
    },
    {
      name: "pngPath",
      baseName: "pngPath",
      type: "string",
      format: "",
    },
    {
      name: "pngUrl",
      baseName: "pngUrl",
      type: "string",
      format: "",
    },
    {
      name: "productUrl",
      baseName: "productUrl",
      type: "string",
      format: "",
    },
    {
      name: "popUp",
      baseName: "popUp",
      type: "boolean",
      format: "",
    },
    {
      name: "question",
      baseName: "question",
      type: "string",
      format: "",
    },
    {
      name: "longQuestion",
      baseName: "longQuestion",
      type: "string",
      format: "",
    },
    {
      name: "reminderEndTime",
      baseName: "reminderEndTime",
      type: "string",
      format: "",
    },
    {
      name: "reminderFrequency",
      baseName: "reminderFrequency",
      type: "number",
      format: "int32",
    },
    {
      name: "reminderSound",
      baseName: "reminderSound",
      type: "string",
      format: "",
    },
    {
      name: "reminderStartEpochSeconds",
      baseName: "reminderStartEpochSeconds",
      type: "number",
      format: "",
    },
    {
      name: "reminderStartTime",
      baseName: "reminderStartTime",
      type: "string",
      format: "",
    },
    {
      name: "reminderStartTimeLocal",
      baseName: "reminderStartTimeLocal",
      type: "string",
      format: "string",
    },
    {
      name: "reminderStartTimeLocalHumanFormatted",
      baseName: "reminderStartTimeLocalHumanFormatted",
      type: "string",
      format: "",
    },
    {
      name: "repeating",
      baseName: "repeating",
      type: "boolean",
      format: "",
    },
    {
      name: "secondDailyReminderTime",
      baseName: "secondDailyReminderTime",
      type: "string",
      format: "",
    },
    {
      name: "secondToLastValue",
      baseName: "secondToLastValue",
      type: "number",
      format: "double",
    },
    {
      name: "sms",
      baseName: "sms",
      type: "boolean",
      format: "",
    },
    {
      name: "startTrackingDate",
      baseName: "startTrackingDate",
      type: "string",
      format: "string",
    },
    {
      name: "stopTrackingDate",
      baseName: "stopTrackingDate",
      type: "string",
      format: "string",
    },
    {
      name: "svgUrl",
      baseName: "svgUrl",
      type: "string",
      format: "",
    },
    {
      name: "thirdDailyReminderTime",
      baseName: "thirdDailyReminderTime",
      type: "string",
      format: "",
    },
    {
      name: "thirdToLastValue",
      baseName: "thirdToLastValue",
      type: "number",
      format: "double",
    },
    {
      name: "trackingReminderId",
      baseName: "trackingReminderId",
      type: "number",
      format: "",
    },
    {
      name: "trackingReminderImageUrl",
      baseName: "trackingReminderImageUrl",
      type: "string",
      format: "",
    },
    {
      name: "upc",
      baseName: "upc",
      type: "string",
      format: "",
    },
    {
      name: "updatedAt",
      baseName: "updatedAt",
      type: "string",
      format: "",
    },
    {
      name: "userId",
      baseName: "userId",
      type: "number",
      format: "int32",
    },
    {
      name: "userVariableUnitAbbreviatedName",
      baseName: "userVariableUnitAbbreviatedName",
      type: "string",
      format: "",
    },
    {
      name: "userVariableUnitCategoryId",
      baseName: "userVariableUnitCategoryId",
      type: "number",
      format: "",
    },
    {
      name: "userVariableUnitCategoryName",
      baseName: "userVariableUnitCategoryName",
      type: "string",
      format: "",
    },
    {
      name: "userVariableUnitId",
      baseName: "userVariableUnitId",
      type: "number",
      format: "",
    },
    {
      name: "userVariableUnitName",
      baseName: "userVariableUnitName",
      type: "string",
      format: "",
    },
    {
      name: "userVariableVariableCategoryId",
      baseName: "userVariableVariableCategoryId",
      type: "number",
      format: "",
    },
    {
      name: "userVariableVariableCategoryName",
      baseName: "userVariableVariableCategoryName",
      type: "string",
      format: "",
    },
    {
      name: "valence",
      baseName: "valence",
      type: "string",
      format: "",
    },
    {
      name: "valueAndFrequencyTextDescription",
      baseName: "valueAndFrequencyTextDescription",
      type: "string",
      format: "",
    },
    {
      name: "valueAndFrequencyTextDescriptionWithTime",
      baseName: "valueAndFrequencyTextDescriptionWithTime",
      type: "string",
      format: "",
    },
    {
      name: "variableCategoryId",
      baseName: "variableCategoryId",
      type: "number",
      format: "",
    },
    {
      name: "variableCategoryImageUrl",
      baseName: "variableCategoryImageUrl",
      type: "string",
      format: "",
    },
    {
      name: "variableCategoryName",
      baseName: "variableCategoryName",
      type: "TrackingReminderVariableCategoryNameEnum",
      format: "",
    },
    {
      name: "variableDescription",
      baseName: "variableDescription",
      type: "string",
      format: "",
    },
    {
      name: "variableId",
      baseName: "variableId",
      type: "number",
      format: "int32",
    },
    {
      name: "variableName",
      baseName: "variableName",
      type: "string",
      format: "",
    },
  ]

  static getAttributeTypeMap() {
    return TrackingReminder.attributeTypeMap
  }

  public constructor() {}
}

export type TrackingReminderCombinationOperationEnum = "MEAN" | "SUM"
export type TrackingReminderVariableCategoryNameEnum =
  | "Activity"
  | "Books"
  | "Causes of Illness"
  | "Cognitive Performance"
  | "Conditions"
  | "Emotions"
  | "Environment"
  | "Foods"
  | "Goals"
  | "Locations"
  | "Miscellaneous"
  | "Movies and TV"
  | "Music"
  | "Nutrients"
  | "Payments"
  | "Physical Activities"
  | "Physique"
  | "Sleep"
  | "Social Interactions"
  | "Software"
  | "Symptoms"
  | "Treatments"
  | "Vital Signs"
